// <auto-generated />
using System;
using LucasRT.RavenDB.Demo.Application.PostgreSQL_Services.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LucasRT.RavenDB.Demo.Application.Migrations
{
    [DbContext(typeof(PostgreSQL))]
    [Migration("20250712152843_Guest_and_SocialNetwork")]
    partial class Guest_and_SocialNetwork
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LucasRT.RavenDB.Demo.Domain.Entities.Guests.Guest", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Guest");
                });

            modelBuilder.Entity("LucasRT.RavenDB.Demo.Domain.Entities.Guests.SocialNetwork", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("GuestId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GuestId");

                    b.ToTable("SocialNetwork", "add");
                });

            modelBuilder.Entity("LucasRT.RavenDB.Demo.Domain.Entities.Menus.Beverage", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<double>("AlcoholPercentage")
                        .HasColumnType("double precision");

                    b.Property<string>("BeverageType")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<double?>("IBU")
                        .HasColumnType("double precision");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Producer")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Variety")
                        .HasColumnType("text");

                    b.Property<int?>("Vintage")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("beverage");
                });

            modelBuilder.Entity("LucasRT.RavenDB.Demo.Domain.Entities.Guests.SocialNetwork", b =>
                {
                    b.HasOne("LucasRT.RavenDB.Demo.Domain.Entities.Guests.Guest", null)
                        .WithMany("SocialNetworks")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LucasRT.RavenDB.Demo.Domain.Entities.Guests.Guest", b =>
                {
                    b.Navigation("SocialNetworks");
                });
#pragma warning restore 612, 618
        }
    }
}
